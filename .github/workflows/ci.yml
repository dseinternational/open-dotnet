name: CI Build, Test, Publish

on:
  push:
    branches:
      - main

jobs:
  build_test_package:
    name: Build, Test, Publish

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone

      - name: Set .NET SDK version
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.100-preview.7.23376.3"

      - name: Set Versions
        id: nbgv
        uses: dotnet/nbgv@master
        with:
          setCommonVars: true
          setAllVars: true

      - name: Initialise versions.props
        run: ./eng/scripts/versions.ps1
        shell: pwsh

      - name: Diagnostics
        run: "Get-ChildItem Env:"
        shell: pwsh

      - name: Build
        run: dotnet build ./DSE.Open.sln --configuration ${{ matrix.configuration }}

      - name: Test
        run: |
          dotnet test ./DSE.Open.sln `
            --configuration ${{ matrix.configuration }} `
            --no-build `
            --collect:"XPlat Code Coverage" `
            --verbosity normal
        shell: pwsh

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Pack source generators
        if: matrix.configuration == 'Release'
        run: |
          Get-ChildItem ./gen/**/*.csproj -Recurse | `
            ForEach-Object { dotnet pack $_.FullName --configuration Release --no-build }
        shell: pwsh

      - name: Pack libraries
        if: matrix.configuration == 'Release'
        run: |
          Get-ChildItem ./src/**/*.csproj -Recurse | `
            ForEach-Object { dotnet pack $_.FullName --configuration Release --no-build }
        shell: pwsh

      - name: Publish
        if: matrix.configuration == 'Release'
        run: ./eng/scripts/push.ps1 -api_key ${{ secrets.PACKAGES_TOKEN }}
        shell: pwsh
