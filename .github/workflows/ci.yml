name: CI Build, Test, Publish

on:
  push:
    branches:
      - main

jobs:
  build_test_package:
    name: Build, Test, Publish

    strategy:
      matrix:
        os: [ubuntu-24.04, windows-2025]
        configuration: [Debug, Release]

    runs-on: ${{ matrix.os }}

    timeout-minutes: 45

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # avoid shallow clone

      - name: Cache Stanza downloads
        id: cache-stanza-downloads
        uses: actions/cache@v4
        env:
          cache-name: cache-stanza-downloads
          stanza-version: 1.11.0
        with:
          path: ~/stanza_resources
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.stanza-version }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.stanza-version }}

      - name: Set Python version
        uses: actions/setup-python@v6
        with:
          python-version: "3.13.8"
          cache: "pip"

      - name: Configure Python environment
        run: ./eng/scripts/init_python.ps1

      - name: Set .NET SDK version
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: global.json
          dotnet-version: | 
            8.0.x
            9.0.x
            10.0.x

      - name: Set Versions
        id: nbgv
        uses: dotnet/nbgv@master
        with:
          setCommonVars: true
          setAllVars: true

      - name: Initialise versions.props
        run: ./eng/scripts/versions.ps1
        shell: pwsh

      - name: Diagnostics
        run: "Get-ChildItem Env:"
        shell: pwsh

      - name: Restore
        run: dotnet restore ./DSE.Open.slnx

      - name: Build DSE.Open.Values.Generators
        run: dotnet build ./gen/DSE.Open.Values.Generators/DSE.Open.Values.Generators.csproj --no-restore --configuration ${{ matrix.configuration }}

      - name: Build
        run: dotnet build ./DSE.Open.slnx --no-restore --configuration ${{ matrix.configuration }}

      - name: Run Tests
        uses: dseinternational/open-dotnet/.github/actions/dotnet-test@actions-0.10
        with:
          target: ./test
          configuration: ${{ matrix.configuration }}
        env:
          STANZA_NLP: en
          PYTHON3_HOME: ${{ env.Python3_ROOT_DIR }}

      - name: Upload coverage reports to Codecov
        if: matrix.configuration == 'Debug'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ github.workspace }}/coverage

      - name: Pack libraries and source generators
        if: matrix.configuration == 'Release' && matrix.os =='ubuntu-24.04'
        run: ./eng/scripts/pack.ps1
        shell: pwsh

      - name: Publish
        if: matrix.configuration == 'Release' && matrix.os =='ubuntu-24.04'
        run: ./eng/scripts/push.ps1 -api_key ${{ secrets.PACKAGES_TOKEN }}
        shell: pwsh
