// <auto-generated />

#pragma warning disable 618, 612, 414, 168, CS1591, SA1129, SA1309, SA1312, SA1403, SA1649

using MsgPack = global::MessagePack;

namespace MessagePack {
partial class GeneratedMessagePackResolver {
internal partial class DSE {
internal partial class Open {
internal partial class Values {
	internal sealed class IdentifierFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::DSE.Open.Values.Identifier>
	{
		// Length
		private static global::System.ReadOnlySpan<byte> GetSpan_Length() => new byte[1 + 6] { 166, 76, 101, 110, 103, 116, 104 };

		public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::DSE.Open.Values.Identifier value, global::MessagePack.MessagePackSerializerOptions options)
		{
			writer.WriteMapHeader(1);
			writer.WriteRaw(GetSpan_Length());
			writer.Write(value.Length);
		}

		public global::DSE.Open.Values.Identifier Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
		{
			if (reader.TryReadNil())
			{
				throw new global::System.InvalidOperationException("typecode is null, struct not supported");
			}

			options.Security.DepthStep(ref reader);
			var length = reader.ReadMapHeader();
			var ____result = new global::DSE.Open.Values.Identifier();

			for (int i = 0; i < length; i++)
			{
				var stringKey = global::MessagePack.Internal.CodeGenHelpers.ReadStringSpan(ref reader);
				switch (stringKey.Length)
				{
					default:
					FAIL:
					  reader.Skip();
					  continue;
					case 6:
					    if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 114849160783180UL) { goto FAIL; }

					    reader.Skip();
					    continue;

				}
			}

			reader.Depth--;
			return ____result;
		}
	}

}
}
}
}
}
